generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique @db.VarChar(32)
  displayName String    @db.VarChar(32)
  password    String    @db.Text
  avatar      String?   @db.Text
  banner      String?   @db.Text
  bio         String?   @db.VarChar(255)
  isDeleted   Boolean
  lastSeen    DateTime  @default(now()) @db.Timestamptz()
  createdAt   DateTime  @default(now()) @db.Timestamptz()
  updatedAt   DateTime  @default(now()) @db.Timestamptz()
  friends     Friends[] @relation("friendOf")
  friendsOf   Friends[] @relation("friend")
}

model Friends {
  friendOf   User          @relation("friendOf", fields: [friendOfId], references: [id])
  friendOfId String
  friend     User          @relation("friend", fields: [friendId], references: [id])
  friendId   String
  createdAt  DateTime      @default(now()) @db.Timestamptz()
  updatedAt  DateTime      @default(now()) @db.Timestamptz()
  status     FriendsStatus

  @@id([friendOfId, friendId])
}

enum FriendsStatus {
  PENDING
  ACTIVE
}

model Community {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(128)
  bio       String   @db.VarChar(255)
  avatar    String   @db.Text
  banner    String   @db.Text
  isDeleted Boolean
  createdAt DateTime @default(now()) @db.Timestamptz()
  updatedAt DateTime @default(now()) @db.Timestamptz()
  inbox     Inbox?
}

model Inbox {
  id          String    @id @default(uuid())
  inboxType   InboxType
  community   Community @relation(fields: [communityId], references: [id])
  communityId String    @unique
}

enum InboxType {
  DM
  COMMUNITY
}
